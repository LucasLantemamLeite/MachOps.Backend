// <auto-generated />
using System;
using MachOps.Migrations.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachOps.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250816003327_InitialDeploy")]
    partial class InitialDeploy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MachOps.Domain.Entities.Machinery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Machines", (string)null);
                });

            modelBuilder.Entity("MachOps.Domain.Entities.Machinery", b =>
                {
                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.ExpectedReturnDate", "ExpectedReturnDate", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<DateTime?>("Value")
                                .HasColumnType("Date")
                                .HasColumnName("Return");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryCreatedAt", "MachineryCreatedAt", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("Datetime")
                                .HasColumnName("CreateAt");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryDescription", "MachineryDescription", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<string>("Value")
                                .HasColumnType("Nvarchar(100)")
                                .HasColumnName("Description");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryLastUpdatedAt", "MachineryLastUpdatedAt", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("DateTime2")
                                .HasColumnName("UpdateAt");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryLocation", "MachineryLocation", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<string>("Value")
                                .HasColumnType("Nvarchar(20)")
                                .HasColumnName("Location");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryName", "MachineryName", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("Nvarchar(30)")
                                .HasColumnName("Name");

                            b1.HasKey("MachineryId");

                            b1.HasIndex(new[] { "Value" }, "Unique_Key_Name_Machines")
                                .IsUnique();

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryStatus", "MachineryStatus", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<int>("Value")
                                .HasColumnType("Int")
                                .HasColumnName("Status");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MachineryType", "MachineryType", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<int>("Value")
                                .HasColumnType("Int")
                                .HasColumnName("Type");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.OwnsOne("MachOps.Domain.ValueObjects.Machinery.MaintenanceStartDate", "MaintenanceStartDate", b1 =>
                        {
                            b1.Property<int>("MachineryId")
                                .HasColumnType("Int");

                            b1.Property<DateTime?>("Value")
                                .HasColumnType("Date")
                                .HasColumnName("Start");

                            b1.HasKey("MachineryId");

                            b1.ToTable("Machines");

                            b1.WithOwner()
                                .HasForeignKey("MachineryId");
                        });

                    b.Navigation("ExpectedReturnDate")
                        .IsRequired();

                    b.Navigation("MachineryCreatedAt")
                        .IsRequired();

                    b.Navigation("MachineryDescription")
                        .IsRequired();

                    b.Navigation("MachineryLastUpdatedAt")
                        .IsRequired();

                    b.Navigation("MachineryLocation")
                        .IsRequired();

                    b.Navigation("MachineryName")
                        .IsRequired();

                    b.Navigation("MachineryStatus")
                        .IsRequired();

                    b.Navigation("MachineryType")
                        .IsRequired();

                    b.Navigation("MaintenanceStartDate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
